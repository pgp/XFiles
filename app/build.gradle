apply plugin: 'com.android.application'

android {
    compileSdkVersion 33
    ndkVersion '21.3.6528147'
    defaultConfig {
        applicationId "it.pgp.xfiles"
        minSdkVersion 19
        targetSdkVersion 33
        multiDexEnabled true
        versionCode 198241030
        versionName "1.9.8"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -pthread -frtti -fexceptions"
            }
        }
    }
    splits {
        abi {
            enable true
            reset()
            // include "x86", "x86_64", "armeabi-v7a", "arm64-v8a"
            include "armeabi-v7a", "arm64-v8a"
            universalApk true
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            packagingOptions {
                doNotStrip '**/libdummy*.so'
                exclude 'META-INF/DEPENDENCIES'
                exclude 'mozilla/public-suffix-list.txt'
            }
        }

        debug {
            minifyEnabled false

            packagingOptions {
                doNotStrip '**/libdummy*.so'
                exclude 'META-INF/DEPENDENCIES'
                exclude 'mozilla/public-suffix-list.txt'
            }
        }
    }

    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    lintOptions {
        abortOnError false
    }

    task rhTask {
        println("Cloning and building XFilesRootHelper native library for Android")
        def lp = System.getenv("LOWPERF") // used only for Travis CI, used to discriminate against explicit PATH import as well
        def path = "PATH="+System.getenv("PATH")
        def lparg = lp?"LOWPERF="+lp:""
        def workingDir = new File(".")
		def proc = lp?
                ((System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows'))?"buildRootHelpersAndroid.bat":"./buildRootHelpersAndroid.sh").execute([path,lparg],workingDir)
                :((System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows'))?"buildRootHelpersAndroid.bat":"./buildRootHelpersAndroid.sh").execute()
			
        proc.consumeProcessOutput(System.out, System.err)
        proc.waitFor()
    }

    project.afterEvaluate {
        build.dependsOn rhTask
    }

    sourceSets {
        main {
            // let gradle pack the shared libraries (lib7z.so and libr.so) into apk
            jni.srcDirs = []
            jniLibs.srcDirs = ['../libs']
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:swiperefreshlayout:28.0.0'
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'com.android.support:viewpager:28.0.0'
    implementation 'com.github.solkin:disk-lru-cache:1.5'
    implementation 'com.android.support:multidex:1.0.3'
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.65'
    implementation group: 'org.slf4j', name: 'slf4j-android', version: '1.7.30'
    implementation group: 'com.hierynomus', name: 'sshj', version: '0.29.0'
    implementation group: 'org.apache.ftpserver', name: 'ftpserver-core', version: '1.1.0'
    // newest version of ftpserver.core causes manifest merge error
    implementation group: 'eu.agno3.jcifs', name: 'jcifs-ng', version: '2.1.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.1'
    implementation 'com.linkedin.dexmaker:dexmaker:2.28.3'
}
